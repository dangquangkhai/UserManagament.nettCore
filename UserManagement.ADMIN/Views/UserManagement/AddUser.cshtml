@{ ViewData["Title"] = "Add New User"; }
<link rel="stylesheet" href="../plugins/bower_components/bootstrap-datepicker/bootstrap-datepicker.min.css">
<script src="../plugins/bower_components/bootstrap-datepicker/bootstrap-datepicker.min.js"></script>
<!-- Cropper CSS -->
<link href="../plugins/bower_components/cropper/cropper.min.css" rel="stylesheet">
<!-- Image cropper JavaScript -->
<script src="../plugins/bower_components/cropper/cropper.min.js"></script>

<div class="col-md-12" id="AppAddUsr">
  <div class="panel panel-info">
    <div class="panel-heading"> Tao nguoi dung moi</div>
    <div class="panel-wrapper collapse in" aria-expanded="true">
      <div class="panel-body">
        <div class="form-body">
          <h3 class="box-title">Tai khoan</h3>
          <hr>
          <div class="row">
            <div class="col-md-12">
              <!-- .row -->
              <label class="control-label">Anh nguoi dung</label>
              <div class="row">
                <div class="col-sm-12">
                  <div class="white-Box">
                    <div class="row">
                      <!-- .Your image -->
                      <div class="col-md-12 p-20">
                        <div class="img-container"><img id="image" src="../plugins/images/big/img1.jpg"
                            class="img-responsive" alt="Picture"></div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <!-- /.row -->
              <!-- .row -->
              <div class="row">
                <div class="col-sm-12">
                  <div class="white-Box">
                    <div class="row">
                      <div class="col-md-9 docs-buttons" style="width:100%; text-align: center;">
                        <!-- .btn groups -->
                        <div class="btn-group">
                          <button type="button" class="btn btn-info" data-method="setDragMode" data-option="move"
                            title="Move"> <span class="docs-tooltip" data-toggle="tooltip"
                              title="$().cropper(&quot;setDragMode&quot;, &quot;move&quot;)"> <span
                                class="fa fa-arrows"></span> </span>
                          </button>
                          <button type="button" class="btn btn-info" data-method="setDragMode" data-option="crop"
                            title="Crop"> <span class="docs-tooltip" data-toggle="tooltip"
                              title="$().cropper(&quot;setDragMode&quot;, &quot;crop&quot;)"> <span
                                class="fa fa-crop"></span> </span>
                          </button>
                        </div>
                        <div class="btn-group">
                          <button type="button" class="btn btn-success" data-method="zoom" data-option="0.1"
                            title="Zoom In"> <span class="docs-tooltip" data-toggle="tooltip"
                              title="$().cropper(&quot;zoom&quot;, 0.1)"> <span class="fa fa-search-plus"></span>
                            </span>
                          </button>
                          <button type="button" class="btn btn-success" data-method="zoom" data-option="-0.1"
                            title="Zoom Out"> <span class="docs-tooltip" data-toggle="tooltip"
                              title="$().cropper(&quot;zoom&quot;, -0.1)"> <span class="fa fa-search-minus"></span>
                            </span>
                          </button>
                        </div>
                        <div class="btn-group">
                          <button type="button" class="btn btn-default btn-outline" data-method="move" data-option="-10"
                            data-second-option="0" title="Move Left"> <span class="docs-tooltip" data-toggle="tooltip"
                              title="$().cropper(&quot;move&quot;, -10, 0)"> <span class="fa fa-arrow-left"></span>
                            </span>
                          </button>
                          <button type="button" class="btn btn-default btn-outline" data-method="move" data-option="10"
                            data-second-option="0" title="Move Right"> <span class="docs-tooltip" data-toggle="tooltip"
                              title="$().cropper(&quot;move&quot;, 10, 0)"> <span class="fa fa-arrow-right"></span>
                            </span>
                          </button>
                          <button type="button" class="btn btn-default btn-outline" data-method="move" data-option="0"
                            data-second-option="-10" title="Move Up"> <span class="docs-tooltip" data-toggle="tooltip"
                              title="$().cropper(&quot;move&quot;, 0, -10)"> <span class="fa fa-arrow-up"></span>
                            </span>
                          </button>
                          <button type="button" class="btn btn-default btn-outline" data-method="move" data-option="0"
                            data-second-option="10" title="Move Down"> <span class="docs-tooltip" data-toggle="tooltip"
                              title="$().cropper(&quot;move&quot;, 0, 10)"> <span class="fa fa-arrow-down"></span>
                            </span>
                          </button>
                        </div>
                        <div class="btn-group">
                          <button type="button" class="btn btn-default btn-outline" data-method="rotate"
                            data-option="-45" title="Rotate Left"> <span class="docs-tooltip" data-toggle="tooltip"
                              title="$().cropper(&quot;rotate&quot;, -45)"> <span class="fa fa-rotate-left"></span>
                            </span>
                          </button>
                          <button type="button" class="btn btn-default btn-outline" data-method="rotate"
                            data-option="45" title="Rotate Right"> <span class="docs-tooltip" data-toggle="tooltip"
                              title="$().cropper(&quot;rotate&quot;, 45)"> <span class="fa fa-rotate-right"></span>
                            </span>
                          </button>
                        </div>
                        <div class="btn-group">
                          <button type="button" class="btn btn-default btn-outline" data-method="scaleX"
                            data-option="-1" title="Flip Horizontal"> <span class="docs-tooltip" data-toggle="tooltip"
                              title="$().cropper(&quot;scaleX&quot;, -1)"> <span class="fa fa-arrows-h"></span> </span>
                          </button>
                          <button type="button" class="btn btn-default btn-outline" data-method="scaleY"
                            data-option="-1" title="Flip Vertical"> <span class="docs-tooltip" data-toggle="tooltip"
                              title="$().cropper(&quot;scaleY&quot;, -1)"> <span class="fa fa-arrows-v"></span> </span>
                          </button>
                        </div>
                        <div class="btn-group">
                          <button type="button" class="btn btn-default btn-outline" data-method="crop" title="Crop">
                            <span class="docs-tooltip" data-toggle="tooltip" title="$().cropper(&quot;crop&quot;)">
                              <span class="fa fa-check"></span> </span>
                          </button>
                          <button type="button" class="btn btn-default btn-outline" data-method="clear" title="Clear">
                            <span class="docs-tooltip" data-toggle="tooltip" title="$().cropper(&quot;clear&quot;)">
                              <span class="fa fa-remove"></span> </span>
                          </button>
                        </div>
                        <div class="btn-group">
                          <button type="button" class="btn btn-default btn-outline" data-method="disable"
                            title="Disable"> <span class="docs-tooltip" data-toggle="tooltip"
                              title="$().cropper(&quot;disable&quot;)"> <span class="fa fa-lock"></span> </span>
                          </button>
                          <button type="button" class="btn btn-default btn-outline" data-method="enable" title="Enable">
                            <span class="docs-tooltip" data-toggle="tooltip" title="$().cropper(&quot;enable&quot;)">
                              <span class="fa fa-unlock"></span> </span>
                          </button>
                        </div>
                        <div class="btn-group">
                          <button type="button" class="btn btn-default btn-outline" data-method="reset" title="Reset">
                            <span class="docs-tooltip" data-toggle="tooltip" title="$().cropper(&quot;reset&quot;)">
                              <span class="fa fa-refresh"></span> </span>
                          </button>
                          <label class="btn btn-default btn-outline btn-upload" for="inputImage"
                            title="Upload image file">
                            <input type="file" class="sr-only" id="inputImage" name="file" accept="image/*"> <span
                              class="docs-tooltip" data-toggle="tooltip" title="Import image with Blob URLs"> <span
                                class="fa fa-upload"></span> </span>
                          </label>
                        </div>
                        <div class="btn-group btn-group-crop">
                          <button type="button" class="btn btn-danger" data-method="getCroppedCanvas"> <span
                              class="docs-tooltip" data-toggle="tooltip"
                              title="$().cropper(&quot;getCroppedCanvas&quot;)"> Get Cropped Canvas </span> </button>
                          <button type="button" class="btn btn-danger btn-outline" data-method="getCroppedCanvas"
                            data-option="{ &quot;width&quot;: 160, &quot;height&quot;: 90 }"> <span class="docs-tooltip"
                              data-toggle="tooltip"
                              title="$().cropper(&quot;getCroppedCanvas&quot;, { width: 160, height: 90 })">
                              160&times;90 </span> </button>
                          <button type="button" class="btn btn-danger btn-outline" data-method="getCroppedCanvas"
                            data-option="{ &quot;width&quot;: 320, &quot;height&quot;: 180 }"> <span
                              class="docs-tooltip" data-toggle="tooltip"
                              title="$().cropper(&quot;getCroppedCanvas&quot;, { width: 320, height: 180 })">
                              320&times;180 </span> </button>
                        </div>
                        <!-- Show the cropped image in modal -->
                        <div class="modal fade docs-cropped" id="getCroppedCanvasModal" aria-hidden="true"
                          aria-labelledby="getCroppedCanvasTitle" role="dialog" tabindex="-1">
                          <div class="modal-dialog">
                            <div class="modal-content">
                              <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal"
                                  aria-hidden="true">&times;</button>
                                <h4 class="modal-title" id="getCroppedCanvasTitle">Cropped</h4>
                              </div>
                              <div class="modal-body"></div>
                              <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button> <a
                                  class="btn btn-primary" id="download" href="javascript:void(0);"
                                  download="cropped.jpg">Download</a> </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="row">
            <div class="col-md-6">
              <div class="form-group">
                <label class="control-label">Email</label>
                <input type="email" id="email" v-model="Usr.Email" class="form-control" placeholder="Email"> <span
                  class="help-block"> {{Error.Email}}
                </span> </div>
            </div>
            <!--/span-->
            <div class="col-md-6">
              <div class="form-group">
                <label class="control-label">Username</label>
                <input type="text" id="username" v-model="Usr.Username" class="form-control"
                  placeholder="Ten dang nhap"> {{Error.Username}} <span class="help-block">
                </span> </div>
            </div>
            <!--/span-->
          </div>
          <div class="row">
            <div class="col-md-6">
              <div class="form-group">
                <label class="control-label">Mat khau</label>
                <input type="password" v-model="Usr.Password" id="password" class="form-control" placeholder="Mat khau">
                <span class="help-block">{{Error.Password}}
                </span> </div>
            </div>
            <!--/span-->
            <div class="col-md-6">
              <div class="form-group">
                <label class="control-label">Nhap lai mat khau</label>
                <input type="password" id="retypepassword" v-model="Usr.RetypePassword" class="form-control"
                  placeholder="Nhap lai mat khau"> <span class="help-block"> {{Error.RetypePassword}}
                </span> </div>
            </div>
            <!--/span-->
          </div>
          <h3 class="box-title">Thong tin ca nhan</h3>
          <hr>
          <div class="row">
            <div class="col-md-6">
              <div class="form-group">
                <label class="control-label">Ho</label>
                <input type="text" id="lastName" v-model="Usr.Lastname" class="form-control" placeholder="Ho cua ban">
                <span class="help-block">
                </span> </div>
            </div>
            <!--/span-->
            <div class="col-md-6">
              <div class="form-group">
                <label class="control-label">Ten</label>
                <input type="text" id="firstName" v-model="Usr.Firstname" class="form-control"
                  placeholder="Ten cua ban">
                <span class="help-block">
                </span> </div>
            </div>
            <!--/span-->
          </div>
          <!--/row-->
          <div class="row">
            <div class="col-md-6">
              <div class="form-group">
                <label class="control-label">Ngay sinh</label>
                <input type="text" id="Birthday" v-model="Usr.Birthday" class="form-control" placeholder="DD/MM/YYYY">
                <span class="help-block">{{Error.Birthday}}</span>
              </div>
            </div>
            <div class="col-md-6">
              <div class="form-group">
                <label>Gioi tinh</label>
                <select class="form-control" v-model="Usr.Gender">
                  <option disabled value="">--Chon gioi tinh--</option>
                  <option value="true">Nam</option>
                  <option value="false">Nu</option>
                </select>
              </div>
            </div>
            <!--/span-->
          </div>
          <!--/span-->
          <!--/row-->
          <h3 class="box-title">Dia chi</h3>
          <hr>
          <div class="row">
            <div class="col-md-12 ">
              <div class="form-group">
                <label>Thanh pho</label>
                <input type="text" v-model="Address.City" class="form-control"> </div>
            </div>
          </div>
          <div class="row">
            <div class="col-md-6">
              <div class="form-group">
                <label>Quan</label>
                <input type="text" v-model="Address.State" class="form-control"> </div>
            </div>
            <!--/span-->
            <div class="col-md-6">
              <div class="form-group">
                <label>Duong</label>
                <input type="text" v-model="Address.Street" class="form-control"> </div>
            </div>
            <!--/span-->
          </div>
          <!--/row-->
          <div class="row">
            <div class="col-md-6">
              <div class="form-group">
                <label>Post Code</label>
                <input type="text" class="form-control"> </div>
            </div>
            <!--/span-->
            <div class="col-md-6">
              <div class="form-group">
                <label>Quoc Gia</label>
                <select class="form-control" v-model="Usr.Nationality">
                  <option disabled value="">--Select your Country--</option>
                  <option value="US" selected>US</option>
                  <option value="UK">UK</option>
                  <option value="VN">VN</option>
                </select>
              </div>
            </div>
            <!--/span-->
          </div>
        </div>
        <div class="form-actions">
          <button class="btn btn-success" v-if="!DisbledClickbtn" type="button" v-on:click="CreateUsr()">Tao</button>
          <button class="btn btn-success" v-else-if="DisbledClickbtn" type="button" disabled>Tao</button>
        </div>

      </div>
    </div>
  </div>
</div>



<script>
  var AppAddUsr = new Vue({
    el: "#AppAddUsr",
    data() {
      return {
        Usr: {
          Address: null,
          Birthday: null,
          Email: null,
          Firstname: null,
          Gender: '',
          Image: null,
          IsEnabled: null,
          Lastname: null,
          Nationality: '',
          Password: null,
          RetypePassword: null,
          Phone: null,
          SSN: null,
          Username: null
        },
        Error: {
          Birthday: null,
          Email: null,
          Password: null,
          RetypePassword: null,
          Username: null
        },
        Address: {
          City: null,
          State: null,
          Street: null
        },
        DisbledClickbtn: false
      };
    },
    watch: {
      'Usr.Email': function (val) {
        if (LibUtils.isEmpty(val)) {
          this.Error.Email = "Không được để trống email";
          this.DisbledClickbtn = true;
          return;
        }
        if (!LibUtils.isEmail(val)) {
          this.Error.Email = "Email không hợp lệ";
          this.DisbledClickbtn = true;
        }
        this.Error.Email = null;
        this.DisbledClickbtn = false;
      },
      'Usr.Username': function (val) {
        if (LibUtils.isEmpty(val)) {
          this.Error.Username = "Không được để trống tên nguoi dung";
          this.DisbledClickbtn = true;
          return;
        }
        this.Error.Username = null;
        this.DisbledClickbtn = false;
      },
      'Usr.Password': function (val) {
        if (LibUtils.isEmpty(val)) {
          this.Error.Password = "Không được để trống mat khau";
          this.DisbledClickbtn = true;
          return;
        }
        if (!LibUtils.isEmpty(this.Usr.RetypePassword)) {
          if (val !== this.Usr.RetypePassword) {
            this.Error.Password = "Mat khau khong giong";
            this.Error.RetypePassword = "Khong trung mat khau";
            this.DisbledClickbtn = true;
            return;
          }

        }
        this.Error.Password = null;
        this.Error.RetypePassword = null;
        this.DisbledClickbtn = false;
      },
      'Usr.RetypePassword': function (val) {
        if (LibUtils.isEmpty(val)) {
          this.Error.RetypePassword = "Không được để trống";
          this.DisbledClickbtn = true;
          return;
        }

        if (val !== this.Usr.Password) {
          this.Error.Password = "Mat khau khong giong";
          this.Error.RetypePassword = "Khong trung mat khau";
          this.DisbledClickbtn = true;
          return;
        }
        this.Error.Password = null;
        this.Error.RetypePassword = null;
        this.DisbledClickbtn = false;
      },
      'Usr.Birthday': function (val) {
        if (!LibUtils.isEmpty(val)) {
          if (!LibUtils.isValidDate(val)) {
            this.Error.Birthday = "Ngay khong hop le";
            this.DisbledClickbtn = true;
            return;
          }
        }
        this.Error.Birthday = null;
        this.DisbledClickbtn = false;
      },

    },
    updated() {
      var vueVM = this;
      $(document).ready(function () {
        $('#Birthday').datepicker({
          format: 'dd/mm/yyyy',
          autoclose: true,
          todayHighlight: true,
        }).on('changeDate', function (date) {
          date = date.format(0, "dd/mm/yyyy");
          vueVM.Usr.Birthday = date;
        });

      });
    },
    mounted() {
      var vueVM = this;
      $(document).ready(function () {
        $('#Birthday').datepicker({
          format: 'dd/mm/yyyy',
          autoclose: true,
          todayHighlight: true,
        }).on('changeDate', function (date) {
          date = date.format(0, "dd/mm/yyyy");
          vueVM.Usr.Birthday = date;
        });

      });
      this.CropImg();
    },
    methods: {
      CropImg: function () {
        var console = window.console || {
          log: function () {}
        };
        var $image = $('#image');
        var $download = $('#download');
        var $dataX = $('#dataX');
        var $dataY = $('#dataY');
        var $dataHeight = $('#dataHeight');
        var $dataWidth = $('#dataWidth');
        var $dataRotate = $('#dataRotate');
        var $dataScaleX = $('#dataScaleX');
        var $dataScaleY = $('#dataScaleY');
        var options = {
          aspectRatio: 16 / 9,
          preview: '.img-preview',
          crop: function (e) {
            $dataX.val(Math.round(e.x));
            $dataY.val(Math.round(e.y));
            $dataHeight.val(Math.round(e.height));
            $dataWidth.val(Math.round(e.width));
            $dataRotate.val(e.rotate);
            $dataScaleX.val(e.scaleX);
            $dataScaleY.val(e.scaleY);
          }
        };


        // Tooltip
        $('[data-toggle="tooltip"]').tooltip();


        // Cropper
        $image.on({
          'build.cropper': function (e) {},
          'built.cropper': function (e) {},
          'cropstart.cropper': function (e) {},
          'cropmove.cropper': function (e) {},
          'cropend.cropper': function (e) {},
          'crop.cropper': function (e) {},
          'zoom.cropper': function (e) {}
        }).cropper(options);


        // Buttons
        if (!$.isFunction(document.createElement('canvas').getContext)) {
          $('button[data-method="getCroppedCanvas"]').prop('disabled', true);
        }

        if (typeof document.createElement('cropper').style.transition === 'undefined') {
          $('button[data-method="rotate"]').prop('disabled', true);
          $('button[data-method="scale"]').prop('disabled', true);
        }


        // Download
        if (typeof $download[0].download === 'undefined') {
          $download.addClass('disabled');
        }


        // Options
        $('.docs-toggles').on('change', 'input', function () {
          var $this = $(this);
          var name = $this.attr('name');
          var type = $this.prop('type');
          var cropBoxData;
          var canvasData;

          if (!$image.data('cropper')) {
            return;
          }

          if (type === 'checkbox') {
            options[name] = $this.prop('checked');
            cropBoxData = $image.cropper('getCropBoxData');
            canvasData = $image.cropper('getCanvasData');

            options.built = function () {
              $image.cropper('setCropBoxData', cropBoxData);
              $image.cropper('setCanvasData', canvasData);
            };
          } else if (type === 'radio') {
            options[name] = $this.val();
          }

          $image.cropper('destroy').cropper(options);
        });


        // Methods
        $('.docs-buttons').on('click', '[data-method]', function () {
          var $this = $(this);
          var data = $this.data();
          var $target;
          var result;

          if ($this.prop('disabled') || $this.hasClass('disabled')) {
            return;
          }

          if ($image.data('cropper') && data.method) {
            data = $.extend({}, data); // Clone a new one

            if (typeof data.target !== 'undefined') {
              $target = $(data.target);

              if (typeof data.option === 'undefined') {
                try {
                  data.option = JSON.parse($target.val());
                } catch (e) {
                  console.log(e.message);
                }
              }
            }

            if (data.method === 'rotate') {
              $image.cropper('clear');
            }

            result = $image.cropper(data.method, data.option, data.secondOption);

            if (data.method === 'rotate') {
              $image.cropper('crop');
            }

            switch (data.method) {
              case 'scaleX':
              case 'scaleY':
                $(this).data('option', -data.option);
                break;

              case 'getCroppedCanvas':
                if (result) {

                  // Bootstrap's Modal
                  $('#getCroppedCanvasModal').modal().find('.modal-body').html(result);

                  if (!$download.hasClass('disabled')) {
                    $download.attr('href', result.toDataURL('image/jpeg'));
                  }
                }

                break;
            }

            if ($.isPlainObject(result) && $target) {
              try {
                $target.val(JSON.stringify(result));
              } catch (e) {
                console.log(e.message);
              }
            }

          }
        });


        // Keyboard
        $(document.body).on('keydown', function (e) {

          if (!$image.data('cropper') || this.scrollTop > 300) {
            return;
          }

          switch (e.which) {
            case 37:
              e.preventDefault();
              $image.cropper('move', -1, 0);
              break;

            case 38:
              e.preventDefault();
              $image.cropper('move', 0, -1);
              break;

            case 39:
              e.preventDefault();
              $image.cropper('move', 1, 0);
              break;

            case 40:
              e.preventDefault();
              $image.cropper('move', 0, 1);
              break;
          }

        });


        // Import image
        var $inputImage = $('#inputImage');
        var URL = window.URL || window.webkitURL;
        var blobURL;

        if (URL) {
          $inputImage.change(function () {
            var files = this.files;
            var file;

            if (!$image.data('cropper')) {
              return;
            }

            if (files && files.length) {
              file = files[0];

              if (/^image\/\w+$/.test(file.type)) {
                blobURL = URL.createObjectURL(file);
                $image.one('built.cropper', function () {

                  // Revoke when load complete
                  URL.revokeObjectURL(blobURL);
                }).cropper('reset').cropper('replace', blobURL);
                $inputImage.val('');
              } else {
                window.alert('Please choose an image file.');
              }
            }
          });
        } else {
          $inputImage.prop('disabled', true).parent().addClass('disabled');
        }
      },
      GetImg: function () {
        return $('#image').cropper('getCroppedCanvas').toDataURL('image/jpeg');
      },
      ShowImg: function () {
        this.Usr.Image = this.GetImg();
        LibUtils.callToast("Thanh Cong", "OK");
      },
      validUsr: function () {
        var arr = Object.keys(this.Error);
        value = [];
        for (var i = 0; i < arr.length; i++) {
          value.push(0);
        }
        if (LibUtils.isEmpty(this.Usr.Email)) {
          this.Error.Email = "Không được để trống email";
          value[0] += 1;

        }
        if (!LibUtils.isEmpty(this.Usr.Email)) {
          this.Error.Email = null;
          value[0] = (value[0] > 0) ? (value[0] - 1) : (0);
        }

        if (!LibUtils.isEmail(this.Usr.Email)) {
          this.Error.Email = "Email không hợp lệ";
          value[0] += 1;
        }
        if (LibUtils.isEmail(this.Usr.Email)) {
          this.Error.Email = null;
          value[0] = (value[0] > 0) ? (value[0] - 1) : (0);
        }

        if (LibUtils.isEmpty(this.Usr.Username)) {
          this.Error.Username = "Không được để trống tên nguoi dung";
          value[1] += 1;

        }
        if (!LibUtils.isEmpty(this.Usr.Username)) {
          this.Error.Email = null;
          value[1] = (value[1] > 0) ? (value[1] - 1) : (0);
        }

        if (LibUtils.isEmpty(this.Usr.Password)) {
          this.Error.Password = "Không được để trống mat khau";
          value[2] += 1;
        }
        if (!LibUtils.isEmpty(this.Usr.Password)) {
          this.Error.Password = null;
          value[2] = (value[2] > 0) ? (value[2] - 1) : (0);
        }

        if (LibUtils.isEmpty(this.Usr.RetypePassword)) {
          this.Error.RetypePassword = "Không được để trống nhap lai mat khau";
          value[3] += 1;
        }
        if (!LibUtils.isEmpty(this.Usr.RetypePassword)) {
          this.Error.RetypePassword = null;
          value[3] = (value[3] > 0) ? (value[3] - 1) : (0);
          if (this.Usr.Password !== this.Usr.RetypePassword) {
            this.Error.Password = "Mat khau khong giong";
            this.Error.RetypePassword = "Khong trung mat khau";
            this.DisbledClickbtn = true;
            value[2] += 1;
            value[3] += 1;
          }
          if (this.Usr.Password === this.Usr.RetypePassword) {
            this.Error.Password = null;
            this.Error.RetypePassword = null;
            value[2] = (value[2] > 0) ? (value[2] - 1) : (0);
            value[3] = (value[3] > 0) ? (value[3] - 1) : (0);
          }

        }


        if (!LibUtils.isEmpty(this.Usr.Birthday)) {
          if (!LibUtils.isValidDate(this.Usr.Birthday)) {
            this.Error.Birthday = "Ngay khong hop le";
            value[4] += 1;
          }
          if (LibUtils.isValidDate(this.Usr.Birthday)) {
            this.Error.Birthday = null;
            value[4] = (value[4] > 0) ? (value[4] - 1) : (0);
          }
        }
        console.log("Value = " + value);
        if (value.includes(1)) {
          this.DisbledClickbtn = true;
          return false;
        }
        this.DisbledClickbtn = false;
        return true;

      },
      CreateUsr: function () {
        if (!this.validUsr()) {
          LibUtils.callToast("Error", "Loi", "error");
          return;
        }
        LibUtils.callToast("Success", "Thanh cong");
        return;
      }
    }
  });
</script>